{"version":3,"sources":["assets/images/1200px-Smiley.svg.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onBlur","updateStatus","onChange","e","currentTarget","autoFocus","onDoubleClick","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","job","unJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","alt","target","files","initialValues","formData","then","Post","item","message","likeCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postElements","posts","p","id","postsBlock","AddNewPostReduxForm","values","addPost","newPostText","Field","name","component","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.af607c3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1200px-Smiley.svg.f5b65636.png\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2dzAA\",\"job\":\"ProfileInfo_job__2dqwQ\",\"unJob\":\"ProfileInfo_unJob__1R-G4\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1qqKK\",\"contact\":\"ProfileInfo_contact__92xq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__FaYex\",\"posts\":\"MyPosts_posts__3Kxl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qFO9t\"};","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false); \r\n    let [status, setStatus] = useState(props.status); \r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => { \r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode\r\n            ?\r\n            <div>\r\n                <b>Status:</b> <span onDoubleClick={ activateEditMode }>{props.status || '___'} </span>\r\n            </div>\r\n            :\r\n            <div>\r\n                <b>Status:</b> <input onBlur={ deactivateEditMode } onChange={ onStatusChange } autoFocus={true} value={ status }/>\r\n            </div> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../Common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport s from './ProfileInfo.module.css';\r\nimport e from '../../Common/FormsControls/FormsControls.module.css';\r\n\r\nexport const ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n    <div><button>save</button></div>\r\n    { error && <div className={e.formSummaryError}>{error}</div> }\r\n    <div>\r\n      <b>Full Name: </b> { createField('Full name', 'fullName', [], Input) }\r\n    </div>\r\n\r\n    <div>\r\n      <b>Looking for a job: </b> { createField('', 'lookingForAJob', [], Input, {type: 'checkbox'}) }\r\n    </div> \r\n\r\n    <b>My Professional Skills: </b> \r\n    { createField('My Professional Skills', 'lookingForAJobDescription', [], Textarea) }\r\n\r\n    <b>About Me: </b> \r\n    { createField('About Me', 'aboutMe', [], Textarea) }\r\n\r\n    <div>\r\n      <b>Contacts: </b> {profile && Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={s.contact}>\r\n          <b>{key}: </b> { createField(key, `contacts.${key}`, [], Input) }\r\n        </div>\r\n      })}\r\n    </div>\r\n\r\n  </form>\r\n  }\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/1200px-Smiley.svg.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false); \r\n\r\n    if(!profile){\r\n      return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n      if(e.target.files.length) {\r\n        savePhoto(e.target.files[0]);\r\n      }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n      saveProfile(formData).then(() => {\r\n        setEditMode(false);\r\n      });\r\n    }\r\n\r\n    return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n          <img src={profile.photos.large || userPhoto } className={s.mainPhoto} alt=''/>\r\n          { isOwner && <input type={'file'} onChange={onMainPhotoSelected}/> }\r\n          \r\n          { editMode \r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> \r\n          : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={()=>{setEditMode(true)}}/> \r\n          }\r\n\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n          \r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return <div>\r\n          {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n          <div>\r\n            <b>Full Name: </b> {profile.fullName}\r\n          </div>\r\n\r\n          <div>\r\n            <b>Looking for a job: </b> <div className={profile.lookingForAJob ? s.job : s.unJob}></div>\r\n          </div> \r\n\r\n          <div>\r\n            <b>My Professional Skills:</b> {profile.lookingForAJobDescription}\r\n          </div>\r\n\r\n          <div>\r\n            <b>About Me: </b> {profile.aboutMe}\r\n          </div>\r\n\r\n          <div>\r\n            <b>Contacts: </b> {profile && Object.keys(profile.contacts).map(key => {\r\n              return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n          </div>\r\n        </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div className={s.contact}><b>{contactTitle}:</b>{contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport userPhoto from '../../../../assets/images/1200px-Smiley.svg.png';\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.item}>\r\n        <img src={userPhoto} alt=''/>\r\n        {props.message}\r\n        <div>\r\n          <span>like {props.likeCount}</span>\r\n        </div>\r\n      </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let postElements = props.posts.map(p => <Post key={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n  return(\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddNewPostReduxForm onSubmit={onAddPost}/>  \r\n      <div className={s.posts}>\r\n        {postElements}\r\n      </div>\r\n    </div>\r\n  ) \r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name={'newPostText'} component={Textarea} placeholder={'Post Message'} \r\n              validate={[required, maxLength10]}/>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      posts: state.profilePage.posts,\r\n      newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      addPost: (newPostText) => {\r\n          dispatch(addPostActionCreator(newPostText));\r\n      }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n      <ProfileInfo savePhoto={props.savePhoto} \r\n                    isOwner={props.isOwner} \r\n                    profile={props.profile} \r\n                    status={props.status} \r\n                    updateStatus={props.updateStatus}\r\n                    saveProfile={props.saveProfile}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile\r\n} from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot){\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} \r\n                  isOwner={!this.props.match.params.userId}\r\n                  profile={this.props.profile} \r\n                  status={this.props.status} \r\n                  updateStatus={this.props.updateStatus}\r\n                  savePhoto={this.props.savePhoto}/>\r\n      </div>\r\n    )\r\n  }\r\n}  \r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  withRouter,\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}